
<!DOCTYPE html />
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>权限组信息管理</title>
<!--框架必需start-->
<script type="text/javascript" src="../libs/js/jquery.js"></script>
<script type="text/javascript" src="../libs/js/language/cn.js"></script>
<script type="text/javascript" src="../libs/js/framework.js"></script>
<link href="../libs/css/import_basic.css" rel="stylesheet" type="text/css"/>
<link rel="stylesheet" type="text/css" id="skin" prePath="../"/>
<link rel="stylesheet" type="text/css" id="customSkin"/>
<!--框架必需end-->
    <!--树组件start -->
    <script type="text/javascript" src="../libs/js/tree/ztree/ztree.js"></script>
    <link href="../libs/js/tree/ztree/ztree.css" rel="stylesheet" type="text/css" />
    <!--树组件end -->
<!-- 树形下拉框start -->
<script type="text/javascript" src="../libs/js/form/selectTree.js"></script>
<!-- 树形下拉框end -->
<!-- 表单验证start -->
<script src="../libs/js/form/validationRule.js" type="text/javascript"></script>
<script src="../libs/js/form/validation.js" type="text/javascript"></script>
<!-- 表单验证end -->


</head>
<body>
<table width="100%" height="100%" border="0" cellspacing="0" cellpadding="0">
	  <tr>
	    <td width="320" valign="top">
<div class="box1" panelWidth="300">
        <div id="leftCon" position="left" style="" paneltitle="权限组">
            <div class="orgTreeContainer">
                <ul id="tree-1" class="ztree">
                </ul>
            </div>
 </div>
 </td>
 <td valign="top">
<div class="box1" panelWidth="700" style=" height:100%; overflow:auto"><form method="post" action="Role.aspx" id="Form2">
<div class="aspNetHidden">
<input type="hidden" name="__VIEWSTATE" id="__VIEWSTATE" value="/wEPDwUJMjc0ODM0MjYwZGRcAxoc07Vdhntg+3IXDoKsjkw+ACuYY1XalVch28YbEA==" />
</div>

<div class="aspNetHidden">

	<input type="hidden" name="__EVENTVALIDATION" id="__EVENTVALIDATION" value="/wEWBwK/4Nr3DgLmiOnkAgKxuJ+pAwKN0OQ/Ao/OudEBAqu3888OAteZ5ZUMsHpEpzG56aKa5J9LpntCh8atB9S0K1V/FL9a6XJRSjM=" />
</div>
<table class="tableStyle" formMode="line">
			<tr>
				<td>权限组名称：</td>
				<td>
					<input name="selectname" type="text" id="selectname" style="width:200px;" class="validate[required]" /><span class="star">*</span>
                    <input type="hidden" name="selectId" id="selectId" value="0" />
                    <input type="hidden" name="ParentId" id="ParentId" value="0" />
                    <input type="hidden" name="Roles" id="Roles" value="0" />
  				</td>
			</tr>

            <tr>
                <td>备注：</td>
				<td><input name="Remark" type="text" id="Remark" style="width:200px;" /></td>
            </tr>
            <tr>
				<td>显示序列：</td>
				<td colspan="3"><input name="Ord" type="text" id="Ord" style="width:200px;" class=" validate[required,custom[onlyNumber]] float_left" /></td>
            </tr>
            <tr>
				<td>权限树：</td>
				<td colspan="3">
                <div>
			          <ul id="tree-2" class="ztree"></ul>
		        </div>
                </td>
            </tr>
			<tr>
				<td align="center" colspan="4">
				
                <input type="button" value="保存" onclick="getSelectValue()" />
				<input type="button" value="取消"/>
				</td>
			</tr>
		</table>
		</form><!--<input type="button" value="获取选择结果" onclick="getSelectValue();"/> <input type="button" value="勾选'员工3'" onclick="checkNode('200');"/>-->
</div>
	</td>
    </tr>
    </table>

   <script type="text/javascript">
       //设定不可编辑的节点id
       var noeditArray = ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17"];

       //树的设置
       var setting1 = {
           view: {
               addHoverDom: addHoverDom,
               removeHoverDom: removeHoverDom,
               selectedMulti: false
           },
           edit: {
               enable: true,
               renameTitle: "修改",
               removeTitle: "删除"
           },
           callback: {
               onClick: onClick1,
               //不允许拖拽
               beforeDrag: beforeDrag1,
               //修改前确认
               beforeEditName: beforeEditName1,
               //修改完时的处理
               beforeRename: beforeRename1,
               //修改成功后处理
               onRename: onRename1,
               //删除前确认
               beforeRemove: beforeRemove1
           }
       };

       //定义树节点初始数据
       var zNodes1 = [
		{ id: "0", parentId: "-1", name: "权限组", open: true, icon: "../libs/icons/home.gif" }
	];
       var setting2 = {
           check: {
               enable: true
           }
       };
       //初始化函数
       function initComplete() {
           //初始化树
           getOrgTreeData();

           //远程JSON数据源
           $.post("../Handler/Menu.ashx?Command=Tree", {}, function (result) {
               //此处返回的是treeNodes
               $.fn.zTree.init($("#tree-2"), setting2, result.treeNodes); setCheck();
           }, "json");


       }

       //获取数据初始化树
       function getOrgTreeData() {
           $.ajax({
               type: 'POST',
               url: '../Handler/Role.ashx',
               dataType: 'json',
               data: { Command: "List" },
               success: function (result) {
                   var nodes = zNodes1.concat(result.treeNodes);
                   $.fn.zTree.init($("#tree-1"), setting1, nodes);

               },
               error: function (a) {
                   top.Dialog.alert("访问服务器端出错！");
                   //alert("访问服务器端出错!");
               },
               dataType: 'json'
           });
       }

       //获取树对象
       function getTree() {
           return $.fn.zTree.getZTreeObj("tree-1");
       }

       //点击树节点
       function onClick1(event, treeId, treeNode, clickFlag) {
           //设置表单的值

           setForm(treeNode.name, treeNode.Roles);
           $("#selectId").val(treeNode.id);
           $("#Remark").val(treeNode.Remark);
           $("#ParentId").val(treeNode.parentId);
           $("#Ord").val(treeNode.Ord);


           var treeObj = $.fn.zTree.getZTreeObj("tree-2");

           treeObj.checkAllNodes(false);           //先取消所有选择

           checkNode(treeNode.Roles);
       }

       //勾选
       function checkNode(Flag) {
           var zTree = $.fn.zTree.getZTreeObj("tree-2");
           
           var strs = new Array(); //定义一数组

           strs = Flag.split(","); //字符分割      
           for (i = 0; i < strs.length; i++) {
               var node = zTree.getNodeByParam('Flag', strs[i]);
               //4个参数：① 节点 ② 勾选true/取消勾选false ③checkTypeFlag设置父子关联true/设置父子不关联false ④是否回调，调用回调函数true，否则false  
               zTree.checkNode(node, true, true, true);
           }
       }



       //选择结果
       function getSelectValue() {

           //获取zTree对象
           var zTree = $.fn.zTree.getZTreeObj("tree-2");
           //得到选中的数据集
           var checkedNodes = zTree.getCheckedNodes(true);
           var msg = "";


           for (var i = 0; i < checkedNodes.length; i++) {
               msg += "," + checkedNodes[i].Flag;
           }
           if (msg == "") {
               msg = "0";
           } else {
               msg = msg.substring(1);
           }

           $("#Roles").val(msg);
           Save();
          //top.Dialog.alert("已选中:<br/>" + msg );
       }

       function setCheck() {
           var zTree = $.fn.zTree.getZTreeObj("tree-2");
           zTree.setting.check.chkboxType = { "Y": "", "N": "ps" };
        }


       //不允许拖拽
       function beforeDrag1(treeId, treeNodes) {
           return false;
       }

       //确认是否进入编辑状态
       function beforeEditName1(treeId, treeNode) {
           if (treeNode.id == 0) {
               top.Dialog.alert("根节点不能修改！");
               return false;
           }
           else if (getPosition(treeNode.id, noeditArray) != -1) {
               //top.Dialog.alert("为保证数据的完整性，由管理员添加的数据无法修改或删除。可以为新添加的数据来修改和删除。");
               //return false;
           }
           var zTree = getTree();
           //选中该节点
           zTree.selectNode(treeNode);
           //设置表单的值
           setForm(treeNode.name, treeNode.Roles);
           $("#selectId").val(treeNode.id);
           $("#ManagerID").val(treeNode.ManagerID);
           $("#Remark").val(treeNode.Remark);
           $("#ParentId").val(treeNode.parentId);
           zTree.editName(treeNode);
           return true;
       }

       //修改完时处理 不进行后台数据处理
       function beforeRename1(treeId, treeNode, newName) {
           if (newName.length == 0) {
               top.Dialog.alert("节点名称不能为空.");
               getOrgTreeData();
               //var zTree = getTree();
               //setTimeout(function(){zTree.editName(treeNode)}, 10);
               return false;
           }
           return true;
       }
       //修改成功后处理
       function onRename1(event, treeId, treeNode) {
           
           if (treeNode.existed) {
               updateNode(treeNode);
           } else {
               addNode(treeNode);
           }
       }

       //添加节点
       function addNode(treeNode) {
           //设置表单的值
           setForm(treeNode.name, "", "", "");
           $.ajax({
               url: '../Handler/Role.ashx',
               dataType: 'json',
               data: { Id: escape(0), RoleName: escape(treeNode.name), ParentId: escape(treeNode.parentId), Command: "Add" },
               success: function (result) {
                   getOrgTreeData();
               },
               error: function (result) {
                   getOrgTreeData();
               }
           });
       }


       //修改节点名称
       function updateNode(treeNode) {
           $.ajax({
               url: '../Handler/Role.ashx',
               dataType: 'json',
               data: { Id: escape(treeNode.id), RoleName: escape(treeNode.name), Command: "Edit" },
               success: function (result) {
                   getOrgTreeData();
               },
               error: function (result) {
                   getOrgTreeData();
               }
           });
       }

       // 保存
       function Save() {
           $.ajax({
               url: '../Handler/Role.ashx',
               dataType: 'text',
               data: { Id: $("#selectId").val(), RoleName: $("#selectname").val(), Command: "Edit", Roles: $("#Roles").val(), Ord: $("#Ord").val(), Remark: $("#Remark").val() },
               success: function (result) {
                   top.Dialog.alert("保存成功！|保存成功！", function () {
                       getOrgTreeData();
                   });
               },
               error: function (result) {
                   getOrgTreeData();
               }
           });
       }

       //确认是否删除+删除处理
       function beforeRemove1(treeId, treeNode) {
           if (treeNode.id == 0) {
               top.Dialog.alert("根节点不能删除！");
               return false;
           }
           else if (getPosition(treeNode.id, noeditArray) != -1) {
               //top.Dialog.alert("为保证数据的完整性，由管理员添加的数据无法修改或删除。可以为新添加的数据来修改和删除。");
               //return false;
           }
           var zTree = $.fn.zTree.getZTreeObj("tree-1");
           //选中该节点
           zTree.selectNode(treeNode);
           top.Dialog.confirm("确认删除 节点 -- " + treeNode.name + " 吗？", function () {
               //此处进行ajax后台数据处理
               $.ajax({
                   url: '../Handler/Role.ashx',
                   dataType: 'json',
                   data: { Id: escape(treeNode.id), Command: "Del" },
                   success: function (result) {
                       getOrgTreeData();
                   },
                   error: function (result) {
                       getOrgTreeData();
                   }
               });
           });
           return false;
       }

       //添加新增按钮
       var newCount = 1;
       function addHoverDom(treeId, treeNode) {
           if (treeNode.id == "0" || treeNode.id == 0) {
               if (treeNode.editNameFlag || $("#addBtn_" + treeNode.id).length > 0) return;

               var sObj = $("#" + treeNode.tId + "_span");
               var addStr = "<span class='zbutton add' id='addBtn_" + treeNode.id + "' title='添加' onfocus='this.blur();'></span>";
               sObj.append(addStr);

               var btn = $("#addBtn_" + treeNode.id);
               if (btn) {
                   btn.bind("click", function () {
                       var zTree = $.fn.zTree.getZTreeObj("tree-1");
                       var newNode;
                       newNode = zTree.addNodes(treeNode, { id: (100 + newCount), parentId: treeNode.id, name: "新增" + (newCount++), icon: "../libs/icons/star.gif" });
                       if (newNode) {
                           zTree.editName(newNode[0]);
                           //设置表单的值
                           setForm(newNode[0].name, "", "", "");
                       }
                       return false;
                   });
               }
           }
       };
       function removeHoverDom(treeId, treeNode) {
           $("#addBtn_" + treeNode.id).unbind().remove();
       };

       //设置表单值
       function setForm(val1, val2, val3, val4) {
           $("#selectname").val(val1 == 'null' ? '' : val1);
           //$("#Roles").val(val2 == 'null' ? '' : val2);

       }

  
   </script>
</body>
</html>
